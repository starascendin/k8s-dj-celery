import requests

from pydantic import BaseModel
from typing import List, Dict, Any
import snoop

class Thumbnail(BaseModel):
    url: str
    width: int
    height: int


class Chapter(BaseModel):
    title: str
    time: int
    thumbnails: List[Thumbnail]


class ContentDetails(BaseModel):
    duration: str

class VideoChapters(BaseModel):
    areAutoGenerated: bool
    chapters: List[Chapter]


class Video(BaseModel):
    kind: str
    etag: str
    id: str
    contentDetails: ContentDetails
    chapters: VideoChapters


class VideoListResponse(BaseModel):
    kind: str
    etag: str
    items: List[Video]


class YouTubeAPI:
    API_ENDPOINT = "https://yt.lemnoslife.com/videos"

    def __init__(self, api_key: str):
        self.api_key = api_key

    def get_video_chapters_data(self, video_id: str) -> VideoListResponse:
    
        url = f"{self.API_ENDPOINT}?id={video_id}&part=contentDetails,chapters"
        response = requests.get(url)
        response.raise_for_status()
        data = response.json()
        return VideoListResponse.parse_obj(data)
        

if __name__ == "__main__":
    yt = YouTubeAPI("")
    results = yt.get_video_chapters_data("2yI0OnBn2_I")
    print("#results", results)
